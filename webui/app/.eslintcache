[{"/home/luka/Dokumenti/NetMonPi/webui/app/src/index.js":"1","/home/luka/Dokumenti/NetMonPi/webui/app/src/App.js":"2","/home/luka/Dokumenti/NetMonPi/webui/app/src/reportWebVitals.js":"3","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar.js":"4","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/tablica.js":"5","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/graf.js":"6","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card1.js":"7","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card2.js":"8"},{"size":603,"mtime":1607790846533,"results":"9","hashOfConfig":"10"},{"size":1133,"mtime":1607874597668,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607790846533,"results":"12","hashOfConfig":"10"},{"size":800,"mtime":1607876958306,"results":"13","hashOfConfig":"10"},{"size":1071,"mtime":1607793450567,"results":"14","hashOfConfig":"10"},{"size":3739,"mtime":1607872452674,"results":"15","hashOfConfig":"10"},{"size":629,"mtime":1607876693193,"results":"16","hashOfConfig":"10"},{"size":633,"mtime":1607875154890,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1tca51s",{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/luka/Dokumenti/NetMonPi/webui/app/src/index.js",["37","38"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["39","40"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/App.js",["41","42","43","44","45","46"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/reportWebVitals.js",[],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar.js",["47","48","49","50","51"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/tablica.js",[],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/graf.js",["52"],"import React, { Component } from 'react'\nimport Chart from \"chart.js\";\nimport classes from \"./LineGraph.module.css\";\nimport { faBold, faRubleSign } from '@fortawesome/free-solid-svg-icons';\n\nChart.defaults.global.defaultFontFamily = \"'PT Sans', sans-serif\"\nChart.defaults.global.legend.display = false;\n\nclass Graf extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            fetchRunning: true,\n            data: [],\n        }\n    }\n\n    chartRef = React.createRef();\n\n    setData(chart) {\n\n        let myelements = []\n        let mylabels = []\n\n        fetch(\"http://localhost:3080/api/v1/usage\")\n            .then(response => response.json())\n            .then(podaci => {\n                for (let i = 0; i < podaci.length; i++) {\n                    myelements.push(podaci[i]['mean_txInOctets'])\n                    mylabels.push(podaci[i]['time'])\n                }\n            }).then(x => {\n                chart.data.datasets[0].data = myelements.map(x => {return x/1000000});\n                chart.data.labels = mylabels.map(v => {return v.slice(11,16)});\n                chart.update()\n            })\n    }\n\n    componentDidMount() {\n\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n        const { width: graphWidth } = myChartRef.canvas;\n\n        let gradientLine = myChartRef\n            .createLinearGradient(0, 0, graphWidth * 2, 0);\n        gradientLine.addColorStop(0, \"#FF006E\");\n        gradientLine.addColorStop(1, \"#F46036\");\n\n        const { height: graphHeight } = myChartRef.canvas;\n\n        let gradientLine1 = myChartRef\n            .createLinearGradient(0, 0, 0, graphHeight);\n        gradientLine1.addColorStop(0, \"red\");\n        gradientLine1.addColorStop(0.5, \"rgb(255, 0, 110, 0.35)\");\n        gradientLine1.addColorStop(1, \"rgb(255, 0, 110, 0.7)\");\n\n        let chr = new Chart(myChartRef, {\n            type: \"line\",\n            data: {\n                //Bring in data\n                labels: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"],\n                datasets: [\n                    {\n                        label: \"Tx\",\n                        data: [0,0,0,0,0,0,0,0,0,0,0,0],\n                        borderColor: \"rgb(204,0,0)\",\n                        backgroundColor: \"rgba(240, 10, 10, 0.2)\",\n                    },\n                    // {\n                    //     label: \"Rx\",\n                    //     data: [76, 87, 54, 93, 63, 58, 47, 75, 56, 87, 96, 45],\n                    //     borderColor: \"rgb(0, 0, 255)\"\n                    // }\n                ]\n            },\n            options: {\n                title: {\n                    display: true,\n                    text: 'WAN Bandwith',\n                    fontStyle: faBold,\n                    fontColor: 'rgb(204, 0, 0)'\n                },\n                scales: {\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'MB/s'\n                        }\n                    }]\n                },\n                elements: {\n                    line: {\n                    },\n                    point: {\n                        radius: 1\n                    }\n                },\n                maintainAspectRatio: false,\n                legend: {\n                    display: false,\n                    position: \"right\"\n                }\n            }\n        });\n        this.setData(chr);\n\n    }\n    render() {\n        return (\n            <div className={classes.graphContainer}>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Graf;","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card1.js",["53"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card2.js",["54"],{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":9},{"ruleId":"55","severity":1,"message":"59","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"55","severity":1,"message":"64","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":12},{"ruleId":"55","severity":1,"message":"65","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":12},{"ruleId":"55","severity":1,"message":"66","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":15},{"ruleId":"55","severity":1,"message":"67","line":9,"column":8,"nodeType":"57","messageId":"58","endLine":9,"endColumn":17},{"ruleId":"55","severity":1,"message":"68","line":10,"column":8,"nodeType":"57","messageId":"58","endLine":10,"endColumn":11},{"ruleId":"55","severity":1,"message":"69","line":11,"column":8,"nodeType":"57","messageId":"58","endLine":11,"endColumn":11},{"ruleId":"55","severity":1,"message":"70","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"71","line":2,"column":23,"nodeType":"57","messageId":"58","endLine":2,"endColumn":34},{"ruleId":"55","severity":1,"message":"72","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":25},{"ruleId":"55","severity":1,"message":"73","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":13,"column":11,"nodeType":"76","endLine":13,"endColumn":40},{"ruleId":"55","severity":1,"message":"77","line":4,"column":18,"nodeType":"57","messageId":"58","endLine":4,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":20,"column":13,"nodeType":"76","endLine":20,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":20,"column":13,"nodeType":"76","endLine":20,"endColumn":43},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'Card' is defined but never used.","'logo' is defined but never used.","'Kartica' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'react' is defined but never used.","'NavbarBrand' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCoffee' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faRubleSign' is defined but never used.","no-global-assign","no-unsafe-negation"]