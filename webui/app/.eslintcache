[{"/home/luka/Dokumenti/NetMonPi/webui/app/src/index.js":"1","/home/luka/Dokumenti/NetMonPi/webui/app/src/reportWebVitals.js":"2","/home/luka/Dokumenti/NetMonPi/webui/app/src/App.js":"3","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar.js":"4","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card2.js":"5","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card1.js":"6","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/DeviceTable.js":"7","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/ChartContainer.js":"8","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/ChartComponent.js":"9","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar2.js":"10"},{"size":603,"mtime":1608074755493,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608074755493,"results":"13","hashOfConfig":"12"},{"size":1521,"mtime":1608663327942,"results":"14","hashOfConfig":"12"},{"size":754,"mtime":1608654933854,"results":"15","hashOfConfig":"12"},{"size":1025,"mtime":1608389506540,"results":"16","hashOfConfig":"12"},{"size":1021,"mtime":1608389490133,"results":"17","hashOfConfig":"12"},{"size":1637,"mtime":1608650470082,"results":"18","hashOfConfig":"12"},{"size":1407,"mtime":1608649935597,"results":"19","hashOfConfig":"12"},{"size":3459,"mtime":1608649935597,"results":"20","hashOfConfig":"12"},{"size":975,"mtime":1608665029367,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1tca51s",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/luka/Dokumenti/NetMonPi/webui/app/src/index.js",["48","49"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["50","51"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/reportWebVitals.js",[],"/home/luka/Dokumenti/NetMonPi/webui/app/src/App.js",["52"],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar.js",["53","54","55","56","57","58","59"],"import react from 'react'\nimport { Navbar, Nav, NavbarBrand, Button } from 'react-bootstrap';\nimport logo from \"../slike/net_head.png\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nfunction AlatnaTraka() {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Navbar.Brand href=\"#home\">\n          <img src={logo} width=\"50px\"></img>\n          {' '}\n          NetMonPi\n        </Navbar.Brand>\n      </Navbar.Collapse>\n\n      <Nav>\n        <Button variant=\"outline-light\">\n          Log in\n        </Button>\n        {' '}\n        <Button variant=\"outline-light\">\n          Register\n        </Button>\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default AlatnaTraka;","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card2.js",["60"],"import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport device from '../slike/device.png'\n\nclass Kartica2 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return(\n        //     <Card style={{width: '100%'}}>\n        //         <Card.Header className=\"text-center\">\n        //         Broj uređaja\n        //         </Card.Header>\n\n        //         <Card.Body className=\"text-center\">\n                \n        // <h2><img src={device} width=\"10%\"></img> 8 </h2>\n        //         </Card.Body>\n        //     </Card>\n\n        <Card variant=\"outlined\">\n            <CardHeader title=\"Broj uređaja\">\n                \n            </CardHeader>\n            <CardContent>\n            <h2><img src={device} width=\"10%\"></img> 8 </h2>\n            </CardContent>\n        </Card>\n\n        )\n    }\n}\n\nexport default Kartica2","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/Card1.js",["61"],"import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport user from '../slike/user.svg'\n\nclass Kartica1 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return(\n        //     <Card style={{width: '100%'}}>\n        //         <Card.Header className=\"text-center\">\n        //         Broj korisnika\n        //         </Card.Header>\n\n        //         <Card.Body className=\"text-center\">\n                \n        // <h2><img src={user} width=\"10%\"></img> 10 </h2>\n        //         </Card.Body>\n        //     </Card>\n\n        <Card variant=\"outlined\">\n            <CardHeader title=\"Broj korisnika\">\n                \n            </CardHeader>\n            <CardContent>\n            <h2><img src={user} width=\"10%\"></img> 10 </h2>\n            </CardContent>\n        </Card>\n\n        )\n    }\n}\n\nexport default Kartica1","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/DeviceTable.js",[],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/ChartContainer.js",[],"/home/luka/Dokumenti/NetMonPi/webui/app/src/components/ChartComponent.js",["62","63","64","65","66","67"],"import React, { Component } from 'react'\nimport Chart from \"chart.js\";\nimport moment from \"moment\"\nimport classes from \"./LineGraph.module.css\";\nimport Card from '@material-ui/core/Card'\n\nChart.defaults.global.defaultFontFamily = \"'PT Sans', sans-serif\"\nChart.defaults.global.legend.display = false;\n\nclass ChartComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart: null,\n        }\n    }\n\n    chartRef = React.createRef();\n\n    componentDidMount() {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n        let chartjsObj = new Chart(myChartRef, \n            {\n            type: \"line\",\n            data: {\n                datasets: [\n                    {\n                        label: \"Download\",\n                        borderColor: \"rgb(204,0,0)\",\n                        backgroundColor: \"rgba(240, 10, 10, 0.2)\",\n                    },\n                    {\n                        label: \"Upload\",\n                        borderColor: \"rgb(0, 0, 255)\",\n                        backgroundColor: \"rgba(10, 10, 240, 0.2)\",\n                    }\n                ]\n            },\n            options: {\n                title: {\n                    display: true,\n                    text: 'WAN Bandwith',\n                    fontColor: 'rgb(204, 0, 0)'\n                },\n                scales: {\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'MB/s'\n                        }\n                    }],\n                    xAxes: [{\n                        type: 'time',\n                        time: {\n                            displayFormats: {\n                                minute: 'HH:MM'\n                            },\n                            unit: 'minute'\n                        },\n                        ticks: {\n                            autoSkip: true,\n                            source: 'labels',\n                        }\n                    }],\n                },\n                elements: {\n                    line: {\n                    },\n                    point: {\n                        radius: 1\n                    }\n                },\n                tooltips: {\n                    mode: 'index',\n                    position: 'average',\n                    intersect: false,\n                    callbacks: {\n                        label: (item) => { return item.yLabel + ' MB/s' }\n                    }\n                },\n                maintainAspectRatio: false,\n                legend: {\n                    display: false,\n                    position: \"right\"\n                }\n            }\n        });\n        this.setState({ chart: chartjsObj });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(\"Getting props\")\n        console.log(nextProps);\n        this.state.chart.data.datasets[0].data = nextProps.txData;\n        this.state.chart.data.datasets[1].data = nextProps.rxData;\n        this.state.chart.data.labels = nextProps.chartLabels;\n        console.log(this.state.chart.data)\n        this.state.chart.update();\n    }\n\n    render() {\n        return (\n            <div style={{height: 400}}>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ChartComponent;\n","/home/luka/Dokumenti/NetMonPi/webui/app/src/components/navbar2.js",["68"],{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":9},{"ruleId":"69","severity":1,"message":"73","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"69","severity":1,"message":"78","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":19},{"ruleId":"69","severity":1,"message":"79","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":2,"column":23,"nodeType":"71","messageId":"72","endLine":2,"endColumn":34},{"ruleId":"69","severity":1,"message":"81","line":4,"column":27,"nodeType":"71","messageId":"72","endLine":4,"endColumn":33},{"ruleId":"69","severity":1,"message":"82","line":4,"column":35,"nodeType":"71","messageId":"72","endLine":4,"endColumn":41},{"ruleId":"69","severity":1,"message":"83","line":4,"column":43,"nodeType":"71","messageId":"72","endLine":4,"endColumn":48},{"ruleId":"69","severity":1,"message":"84","line":4,"column":50,"nodeType":"71","messageId":"72","endLine":4,"endColumn":54},{"ruleId":"85","severity":1,"message":"86","line":12,"column":11,"nodeType":"87","endLine":12,"endColumn":40},{"ruleId":"85","severity":1,"message":"86","line":31,"column":17,"nodeType":"87","endLine":31,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":31,"column":17,"nodeType":"87","endLine":31,"endColumn":45},{"ruleId":"69","severity":1,"message":"88","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"89","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":15},{"ruleId":"69","severity":1,"message":"90","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":96,"column":9,"nodeType":"93","endLine":96,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":97,"column":9,"nodeType":"93","endLine":97,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":98,"column":9,"nodeType":"93","endLine":98,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":27,"column":11,"nodeType":"87","endLine":27,"endColumn":40},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'AlatnaTraka' is defined but never used.","'react' is defined but never used.","'NavbarBrand' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","'classes' is defined but never used.","'Card' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]